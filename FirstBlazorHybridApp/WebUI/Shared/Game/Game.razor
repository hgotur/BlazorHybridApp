@inherits ConnectedComponent
@using FirstBlazorHybridApp.redux.slices
@using FirstBlazorHybridApp.Game;

<div class="game-page">
    @foreach (var team in this.State.GameState.Teams)
    {
        <div class="team">
            <div class="team-header">
                <h3 class="team-name">@team.Name</h3>
                <div class="add-player">
                    <AddPlayer Add="addPlayer" Team="team" />
                </div>
            </div>
            <div class="players active-players">
                @foreach (var player in team.ActivePlayers)
                {
                    <div class="player active-player">
                        <div class="player-name">
                            @player.Name
                        </div>
                        <div class="player-actions">
                            @if (State.GameState.Metadata.PowerWeight.HasValue)
                            {
                                <div class="power-action" @onclick="() => this.awardTossup(player, TossupResult.POWER)">POWER</div>
                            }
                            <div class="tossup-action" @onclick="() => this.awardTossup(player, TossupResult.NORMAL)">TOSS<br />UP</div>
                            @if (State.GameState.Metadata.NegWeight.HasValue)
                            {
                                <div class="neg-action" @onclick="() => this.awardNeg(player)">NEG</div>
                            }
                        </div>
                    </div>                
                }
            </div>
            @if (team.BenchPlayers.Count != 0)
            {
                <h5 style="margin: 20px 0px 0px 10px;">Bench</h5>
                <div class="players">
                    @foreach (var player in team.BenchPlayers)
                    {
                        <div class="player">
                            <p class="player-name">@player.Name</p>
                        </div>
                    }
                </div>
            }
        </div>
    }

    <div class="score-view">
        <ScoreView />
    </div>
</div>

@code {
    private void addPlayer(string name, Team team)
    {
        this.Dispatch(new GameSlice.AddPlayer(name, team));
    }

    private void awardTossup(Player player, TossupResult tossupResult)
    {
        this.Dispatch(new GameSlice.AwardTossup(player, tossupResult));
    }

    private void awardNeg(Player player)
    {
        this.Dispatch(new GameSlice.AwardNeg(player));
    }
}