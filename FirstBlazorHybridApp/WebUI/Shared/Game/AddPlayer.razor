@using FirstBlazorHybridApp.Game
@inject IJSRuntime JSRuntime

@if (!this.showAdd)
{
    <button class="btn btn-dark" @onclick="this.toggleAdd">Add Player</button>
}
else
{
<div class="add-player">
    <input type="text" placeholder="Player Name" @bind="this.name" @bind:event="oninput" @onkeypress="this.onEnter" @ref="this.inputElt"/>
    <button class="btn btn-dark" @onclick="() => this.onAdd()">
        <ion-icon name="checkmark-outline" class="icon"></ion-icon>
    </button>
    <button class="btn btn-dark" @onclick="() => this.toggleAdd()">
        <ion-icon name="close-outline" class="icon"></ion-icon>
    </button>
</div>
}

@code {
    [Parameter] public Action<string, Team>? Add { get; set; }
    [Parameter] public Team? Team { get; set; }

    private string name = "";
    private bool showAdd = false;
    private ElementReference inputElt;

    private void toggleAdd()
    {
        this.name = "";
        this.showAdd = !this.showAdd;
    }

    private void onAdd()
    {
        if (this.Add != null && this.Team != null && !String.IsNullOrEmpty(this.name))
        {
            this.Add(this.name, this.Team);
            this.toggleAdd();
        }
    }

    private void onEnter(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Code == "Enter")
        {
            onAdd();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (this.showAdd)
        {
            await JSRuntime.InvokeVoidAsync("FocusElement", inputElt);
        }
    }
}